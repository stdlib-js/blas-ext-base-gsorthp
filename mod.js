// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var f=t,c=function(e,r,t){var f,c,_,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(e,r)||l.call(e,r)?(f=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=f):e[r]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(e,r,t.get),p&&i&&i.call(e,r,t.set),e},_=r()?f:c;var p=function(e,r,t){_(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})},b=Number.POSITIVE_INFINITY;var v=function(e){return 0===e&&1/e===b};var y=function(e){return e!=e},d=Math.floor;function s(e,r,t,n){var o,a,i,u,l,f,c,_,p,b;if(e<=0||0===r)return t;for(r<0&&(n*=-1),o=n<0?(1-e)*n:0,f=e,a=d(e/2);;){if(a>0)c=t[o+(a-=1)*n];else{if(0===(f-=1))return t;c=t[_=o+f*n],t[_]=t[o]}for(i=2*(p=a)+1;i<f&&((b=i+1)<f&&((u=t[o+b*n])>(l=t[o+i*n])||y(u)||u===l&&v(u))&&(i+=1),(u=t[o+i*n])>c||y(u)||u===c&&v(u));)t[o+p*n]=u,i=2*(p=i)+1;t[o+p*n]=c}}function j(e,r,t,n,o){var a,i,u,l,f,c,_,p,b;if(e<=0||0===r)return t;for(r<0&&(o-=(e-1)*(n*=-1)),f=e,a=d(e/2);;){if(a>0)c=t[o+(a-=1)*n];else{if(0===(f-=1))return t;c=t[_=o+f*n],t[_]=t[o]}for(i=2*(p=a)+1;i<f&&((b=i+1)<f&&((u=t[o+b*n])>(l=t[o+i*n])||y(u)||u===l&&v(u))&&(i+=1),(u=t[o+i*n])>c||y(u)||u===c&&v(u));)t[o+p*n]=u,i=2*(p=i)+1;t[o+p*n]=c}}p(s,"ndarray",j);export{s as default,j as ndarray};
//# sourceMappingURL=mod.js.map
